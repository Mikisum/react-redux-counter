[{"C:\\GitHub\\react-redux-counter\\react-counter\\src\\redux\\sagas.js":"1","C:\\GitHub\\react-redux-counter\\react-counter\\src\\redux\\rootReducer.ts":"2","C:\\GitHub\\react-redux-counter\\react-counter\\src\\redux\\actions.ts":"3","C:\\GitHub\\react-redux-counter\\react-counter\\src\\redux\\types.ts":"4","C:\\GitHub\\react-redux-counter\\react-counter\\src\\App.tsx":"5","C:\\GitHub\\react-redux-counter\\react-counter\\src\\index.tsx":"6"},{"size":807,"mtime":1609712765053,"results":"7","hashOfConfig":"8"},{"size":1798,"mtime":1609712765051,"results":"9","hashOfConfig":"8"},{"size":1120,"mtime":1609712765044,"results":"10","hashOfConfig":"8"},{"size":472,"mtime":1609712765054,"results":"11","hashOfConfig":"8"},{"size":1702,"mtime":1609752869946,"results":"12","hashOfConfig":"8"},{"size":726,"mtime":1609712765042,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"r141o2",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\GitHub\\react-redux-counter\\react-counter\\src\\redux\\sagas.js",["29"],"import { put, takeEvery, call} from 'redux-saga/effects';\r\nimport { requestBackground, requestBackgroundFailed, requestBackgroundSuccess} from './actions';\r\nimport { FETCH_BACKGROUND, RESET } from \"./types\";\r\n\r\n\r\nexport function* sagaWatcher() {\r\n  yield takeEvery(FETCH_BACKGROUND, fetchBackgroundAsync)\r\n}\r\n\r\nfunction* fetchBackgroundAsync() {\r\n  try{\r\n    yield put(requestBackground());\r\n    const data = yield call(fetchBackground);\r\n    yield put(requestBackgroundSuccess(data));\r\n  } catch(error) {\r\n    yield put(requestBackgroundFailed)\r\n  }\r\n}\r\n\r\nasync function fetchBackground() {\r\n  let random = Math.ceil(Math.random()*100);\r\n  const url = `https://jsonplaceholder.typicode.com/photos/${random}`\r\n  const response = await fetch(url) \r\n  const json = await response.json()\r\n  return json.url\r\n} ",["30","31"],"C:\\GitHub\\react-redux-counter\\react-counter\\src\\redux\\rootReducer.ts",[],["32","33"],"C:\\GitHub\\react-redux-counter\\react-counter\\src\\redux\\actions.ts",[],"C:\\GitHub\\react-redux-counter\\react-counter\\src\\redux\\types.ts",[],"C:\\GitHub\\react-redux-counter\\react-counter\\src\\App.tsx",[],"C:\\GitHub\\react-redux-counter\\react-counter\\src\\index.tsx",[],{"ruleId":"34","severity":1,"message":"35","line":3,"column":28,"nodeType":"36","messageId":"37","endLine":3,"endColumn":33},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},"no-unused-vars","'RESET' is defined but never used.","Identifier","unusedVar","no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-global-assign","no-unsafe-negation"]